// Mocks generated by Mockito 5.4.5 from annotations
// in test_261224/test/data/repositories/weather_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:test_261224/data/data_sources/weather_api_data_source.dart'
    as _i3;
import 'package:test_261224/domain/entities/weather_entity.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWeatherEntity_0 extends _i1.SmartFake implements _i2.WeatherEntity {
  _FakeWeatherEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WeatherApiDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherApiDataSource extends _i1.Mock
    implements _i3.WeatherApiDataSource {
  MockWeatherApiDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  String get forecastUrl => (super.noSuchMethod(
        Invocation.getter(#forecastUrl),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#forecastUrl),
        ),
      ) as String);

  @override
  _i5.Future<_i2.WeatherEntity> getWeather({
    required double? latitude,
    required double? longitude,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeather,
          [],
          {
            #latitude: latitude,
            #longitude: longitude,
          },
        ),
        returnValue: _i5.Future<_i2.WeatherEntity>.value(_FakeWeatherEntity_0(
          this,
          Invocation.method(
            #getWeather,
            [],
            {
              #latitude: latitude,
              #longitude: longitude,
            },
          ),
        )),
      ) as _i5.Future<_i2.WeatherEntity>);
}
